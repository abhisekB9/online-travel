version: "3.7"

networks:
  kafka-net:
    name: kafka-net
    driver: bridge

services:
  zookeeper:
    image: zookeeper:3.7.0
    container_name: zookeeper
    restart: "no"
    networks:
      - kafka-net
    ports:
      - "2181:2181"

  kafka:
    image: obsidiandynamics/kafka
    container_name: kafka
    restart: "no"
    networks:
      - kafka-net
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER_INTERNAL:PLAINTEXT,DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: DOCKER_INTERNAL://:29092,DOCKER_EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: DOCKER_INTERNAL://kafka:29092,DOCKER_EXTERNAL://kafka:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    restart: "no"
    networks:
      - kafka-net
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
    depends_on:
      - "kafka"

  register-service:
    image: onlinetravel/v1-register:0.0.1-SNAPSHOT
    container_name: register-service
    networks:
      - kafka-net
    ports:
      - 8080:8080
    depends_on:
      - "kafka"
    environment:
      - spring.datasource.url=jdbc:h2:mem:testdb
      - spring.datasource.driverClassName=org.h2.Driver
      - spring.datasource.username=sa
      - spring.datasource.password=sa
      - spring.jpa.show-sql=true
      - spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
      - spring.jpa.hibernate.ddl-auto= update
      - spring.h2.console.enabled=true
      - spring.h2.console.path=/h2-ui
      - server.port= 8080
      - topic.name=t.online.hotel
      - spring.kafka.bootstrap-servers=kafka:9092
      - spring.kafka.producer.key-serializer= org.apache.kafka.common.serialization.StringSerializer
      - spring.kafka.producer.value-serializer= org.apache.kafka.common.serialization.StringSerializer

  search-service:
    image: onlinetravel/v1-search:0.0.1-SNAPSHOT
    container_name: search-service
    networks:
      - kafka-net
    ports:
      - 8081:8081
    depends_on:
      - "kafka"
    environment:
      - spring.datasource.url=jdbc:h2:mem:testdb
      - spring.datasource.driverClassName=org.h2.Driver
      - spring.datasource.username=sa
      - spring.datasource.password=sa
      - spring.jpa.show-sql=true
      - spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
      - spring.jpa.hibernate.ddl-auto= update
      - spring.h2.console.enabled=true
      - spring.h2.console.path=/h2-ui
      - server.port= 8081
      - kafka.topic=t.online.hotel
      - spring.kafka.bootstrap-servers=kafka:9092
      - spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
      - spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
      - spring.kafka.consumer.group-id= "default"



